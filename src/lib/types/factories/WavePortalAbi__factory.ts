/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WavePortalAbi, WavePortalAbiInterface } from "../WavePortalAbi";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "NewWave",
    type: "event",
  },
  {
    inputs: [],
    name: "getAllWaves",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "waver",
            type: "address",
          },
          {
            internalType: "string",
            name: "message",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct WavePortal.Wave[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalWaves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUserWaves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userWaveCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "wave",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200005d6040518060400160405280600b81526020017f57616161617361616161610000000000000000000000000000000000000000008152506200006360201b620005491760201c565b620001f7565b62000103816040516024016200007a919062000170565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200010660201b60201c565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60006200013c8262000194565b6200014881856200019f565b93506200015a818560208601620001b0565b6200016581620001e6565b840191505092915050565b600060208201905081810360008301526200018c81846200012f565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620001d0578082015181840152602081019050620001b3565b83811115620001e0576000848401525b50505050565b6000601f19601f8301169050919050565b610efe80620002076000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063449d46c01461005c5780634ad88b3814610078578063812e8016146100965780639a2cdc08146100c6578063bd43a908146100e4575b600080fd5b6100766004803603810190610071919061092b565b610102565b005b6100806102cf565b60405161008d9190610bd5565b60405180910390f35b6100b060048036038101906100ab9190610902565b610395565b6040516100bd9190610bd5565b60405180910390f35b6100ce6103ad565b6040516100db9190610bd5565b60405180910390f35b6100ec6103f8565b6040516100f99190610af3565b60405180910390f35b60016000808282546101149190610cdc565b9250508190555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461016a9190610cdc565b925050819055506101b06040518060400160405280600d81526020017f2573206861732077617665642100000000000000000000000000000000000000815250336105e2565b600260405180606001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183815260200142815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061026f9291906107e2565b506040820151816002015550503373ffffffffffffffffffffffffffffffffffffffff167f5f7e16dc676677766a70e9c5628aa6c54ddb8b6e5188e2ae1e1f17f1ffbea71642836040516102c4929190610bf0565b60405180910390a250565b60006103506040518060400160405280601981526020017f576520686176652025642077617665732066726f6d2025732100000000000000815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020543361067e565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60016020528060005260406000206000915090505481565b60006103f06040518060400160405280601781526020017f5765206861766520256420746f74616c2077617665732100000000000000000081525060005461071d565b600054905090565b60606002805480602002602001604051908101604052809291908181526020016000905b8282101561054057838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546104a590610db0565b80601f01602080910402602001604051908101604052809291908181526020018280546104d190610db0565b801561051e5780601f106104f35761010080835404028352916020019161051e565b820191906000526020600020905b81548152906001019060200180831161050157829003601f168201915b505050505081526020016002820154815250508152602001906001019061041c565b50505050905090565b6105df8160405160240161055d9190610b15565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506107b9565b50565b61067a82826040516024016105f8929190610b37565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506107b9565b5050565b61071883838360405160240161069693929190610b97565b6040516020818303038152906040527fe3849f79000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506107b9565b505050565b6107b58282604051602401610733929190610b67565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506107b9565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b8280546107ee90610db0565b90600052602060002090601f0160209004810192826108105760008555610857565b82601f1061082957805160ff1916838001178555610857565b82800160010185558215610857579182015b8281111561085657825182559160200191906001019061083b565b5b5090506108649190610868565b5090565b5b80821115610881576000816000905550600101610869565b5090565b600061089861089384610c45565b610c20565b9050828152602081018484840111156108b057600080fd5b6108bb848285610d6e565b509392505050565b6000813590506108d281610eb1565b92915050565b600082601f8301126108e957600080fd5b81356108f9848260208601610885565b91505092915050565b60006020828403121561091457600080fd5b6000610922848285016108c3565b91505092915050565b60006020828403121561093d57600080fd5b600082013567ffffffffffffffff81111561095757600080fd5b610963848285016108d8565b91505092915050565b60006109788383610a85565b905092915050565b61098981610d32565b82525050565b61099881610d32565b82525050565b60006109a982610c86565b6109b38185610ca9565b9350836020820285016109c585610c76565b8060005b85811015610a0157848403895281516109e2858261096c565b94506109ed83610c9c565b925060208a019950506001810190506109c9565b50829750879550505050505092915050565b6000610a1e82610c91565b610a288185610cba565b9350610a38818560208601610d7d565b610a4181610ea0565b840191505092915050565b6000610a5782610c91565b610a618185610ccb565b9350610a71818560208601610d7d565b610a7a81610ea0565b840191505092915050565b6000606083016000830151610a9d6000860182610980565b5060208301518482036020860152610ab58282610a13565b9150506040830151610aca6040860182610ad5565b508091505092915050565b610ade81610d64565b82525050565b610aed81610d64565b82525050565b60006020820190508181036000830152610b0d818461099e565b905092915050565b60006020820190508181036000830152610b2f8184610a4c565b905092915050565b60006040820190508181036000830152610b518185610a4c565b9050610b60602083018461098f565b9392505050565b60006040820190508181036000830152610b818185610a4c565b9050610b906020830184610ae4565b9392505050565b60006060820190508181036000830152610bb18186610a4c565b9050610bc06020830185610ae4565b610bcd604083018461098f565b949350505050565b6000602082019050610bea6000830184610ae4565b92915050565b6000604082019050610c056000830185610ae4565b8181036020830152610c178184610a4c565b90509392505050565b6000610c2a610c3b565b9050610c368282610de2565b919050565b6000604051905090565b600067ffffffffffffffff821115610c6057610c5f610e71565b5b610c6982610ea0565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610ce782610d64565b9150610cf283610d64565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d2757610d26610e13565b5b828201905092915050565b6000610d3d82610d44565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610d9b578082015181840152602081019050610d80565b83811115610daa576000848401525b50505050565b60006002820490506001821680610dc857607f821691505b60208210811415610ddc57610ddb610e42565b5b50919050565b610deb82610ea0565b810181811067ffffffffffffffff82111715610e0a57610e09610e71565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b610eba81610d32565b8114610ec557600080fd5b5056fea26469706673582212201bd4b65ebc0e1e65abcde41bed2871d21a47b95c62ee066b5c6d713ec3a65cc064736f6c63430008040033";

type WavePortalAbiConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WavePortalAbiConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WavePortalAbi__factory extends ContractFactory {
  constructor(...args: WavePortalAbiConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "WavePortalAbi";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WavePortalAbi> {
    return super.deploy(overrides || {}) as Promise<WavePortalAbi>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WavePortalAbi {
    return super.attach(address) as WavePortalAbi;
  }
  connect(signer: Signer): WavePortalAbi__factory {
    return super.connect(signer) as WavePortalAbi__factory;
  }
  static readonly contractName: "WavePortalAbi";
  public readonly contractName: "WavePortalAbi";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WavePortalAbiInterface {
    return new utils.Interface(_abi) as WavePortalAbiInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WavePortalAbi {
    return new Contract(address, _abi, signerOrProvider) as WavePortalAbi;
  }
}
